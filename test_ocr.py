#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ OCR —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
"""

import os
import logging
from image_processor import ImageProcessor
from pdf_processor import PDFProcessor
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)

def test_image_processor():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ImageProcessor"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ImageProcessor...")
    
    processor = ImageProcessor()
    
    print(f"Claude API –¥–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if processor.claude_client else '‚ùå'}")
    print(f"Tesseract –¥–æ—Å—Ç—É–ø–µ–Ω: {'‚úÖ' if processor.tesseract_available else '‚ùå'}")
    
    if not processor.claude_client and not processor.tesseract_available:
        print("‚ùå –ù–∏ –æ–¥–∏–Ω –º–µ—Ç–æ–¥ OCR –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω!")
        print("üìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("   ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Claude API –≤ .env —Ñ–∞–π–ª–µ")
        print("   ‚Ä¢ –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Tesseract OCR")
        return False
    
    return True

def test_pdf_processor():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDFProcessor"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PDFProcessor...")
    
    processor = PDFProcessor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ ImageProcessor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if hasattr(processor, 'image_processor'):
        print("‚úÖ ImageProcessor —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω")
        return True
    else:
        print("‚ùå ImageProcessor –Ω–µ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω")
        return False

def show_env_status():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("\nüîß –°—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    
    bot_token = os.getenv('BOT_TOKEN')
    claude_key = os.getenv('CLAUDE_API_KEY')
    
    print(f"BOT_TOKEN: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if bot_token and bot_token != 'your_bot_token_here' else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    print(f"CLAUDE_API_KEY: {'‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω' if claude_key and claude_key != 'your_claude_api_key_here' else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
    
    if not claude_key or claude_key == 'your_claude_api_key_here':
        print("\nüí° –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Claude API:")
        print("   1. –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á –Ω–∞ console.anthropic.com")
        print("   2. –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: CLAUDE_API_KEY=–≤–∞—à_–∫–ª—é—á")
        print("   3. –ò–ª–∏ —Å–º. –ù–ê–°–¢–†–û–ô–ö–ê_CLAUDE_API.md")

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    
    dependencies = [
        'PIL', 'cv2', 'numpy', 'pdf2image', 'anthropic'
    ]
    
    for dep in dependencies:
        try:
            __import__(dep)
            print(f"‚úÖ {dep}")
        except ImportError:
            print(f"‚ùå {dep} - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ pytesseract –æ—Ç–¥–µ–ª—å–Ω–æ
    try:
        import pytesseract
        try:
            pytesseract.get_tesseract_version()
            print("‚úÖ pytesseract + Tesseract")
        except:
            print("‚ö†Ô∏è pytesseract —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–æ Tesseract –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("‚ùå pytesseract - –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def show_usage_guide():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("\nüìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
    print("""
üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:
   python bot.py

üìÑ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã:
   ‚Ä¢ –¢–µ–∫—Å—Ç–æ–≤—ã–µ PDF - –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
   ‚Ä¢ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ PDF - OCR —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ
   ‚Ä¢ –†–∞–∑–º–µ—Ä –¥–æ 20 –ú–ë

üß† –ú–µ—Ç–æ–¥—ã —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è:
   ‚Ä¢ Claude AI - –≤—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (–ø–ª–∞—Ç–Ω—ã–π)
   ‚Ä¢ Tesseract - –±–∞–∑–æ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)

üìä –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö:
   ‚Ä¢ –¢–µ–∫—Å—Ç - –ø–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
   ‚Ä¢ Excel - —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã

üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞:
   ‚Ä¢ –°–º. –ò–ù–°–¢–†–£–ö–¶–ò–Ø_–ó–ê–ü–£–°–ö–ê.md
   ‚Ä¢ –°–º. –ù–ê–°–¢–†–û–ô–ö–ê_CLAUDE_API.md
""")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("ü§ñ PDF Bot - –¢–µ—Å—Ç OCR –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    print("=" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    check_dependencies()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ–∫—Ä—É–∂–µ–Ω–∏—è
    show_env_status()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    image_ok = test_image_processor()
    pdf_ok = test_pdf_processor()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"ImageProcessor: {'‚úÖ' if image_ok else '‚ùå'}")
    print(f"PDFProcessor: {'‚úÖ' if pdf_ok else '‚ùå'}")
    
    if image_ok and pdf_ok:
        print("\nüéâ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üìÑ –ë–æ—Ç –≥–æ—Ç–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å PDF –¥–æ–∫—É–º–µ–Ω—Ç—ã")
    else:
        print("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π")
        print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≤—ã—à–µ")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ
    show_usage_guide()

if __name__ == "__main__":
    main() 